/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.8.10"

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    mavenCentral()
}

dependencies {
    val ktorVersion = "2.3.2"
    val prometheusVersion = "0.9.0"

    implementation("io.ktor:ktor-server-core:$ktorVersion")
    implementation("io.prometheus:simpleclient_common:$prometheusVersion")
    //ktor-server-test-host

    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.1")

    testImplementation("io.kotest:kotest-runner-junit5:4.3.1")
    testImplementation("io.kotest:kotest-assertions-core:4.3.1")

    testImplementation("io.ktor:ktor-server-test-host:$ktorVersion")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

/*
* interface PrometheusDefaults: DependencyGroup {
    override val version get() = "0.9.0"
    override val groupId get() = "io.prometheus"

    val common get() = dependency("simpleclient_common")
    val hotspot get() = dependency("simpleclient_hotspot")
    val httpServer get() = dependency("simpleclient_httpserver")
    val logback get() = dependency("simpleclient_logback")
    val simpleClient get() = dependency("simpleclient")
}
*
* */
